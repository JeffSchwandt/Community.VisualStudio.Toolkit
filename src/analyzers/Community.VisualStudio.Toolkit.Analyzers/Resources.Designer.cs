//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Community.VisualStudio.Toolkit.Analyzers {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Community.VisualStudio.Toolkit.Analyzers.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cast to &apos;{0}&apos;.
        /// </summary>
        internal static string CVST001_CodeFix {
            get {
                return ResourceManager.GetString("CVST001_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interop services should be cast to their specific type.
        /// </summary>
        internal static string CVST001_Description {
            get {
                return ResourceManager.GetString("CVST001_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cast this service to &apos;{0}&apos;.
        /// </summary>
        internal static string CVST001_MessageFormat {
            get {
                return ResourceManager.GetString("CVST001_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cast interop services to their specific type.
        /// </summary>
        internal static string CVST001_Title {
            get {
                return ResourceManager.GetString("CVST001_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add [ComVisible(true)].
        /// </summary>
        internal static string CVST002_CodeFix {
            get {
                return ResourceManager.GetString("CVST002_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DialogPage implementations should be visible to COM.
        /// </summary>
        internal static string CVST002_MessageFormat {
            get {
                return ResourceManager.GetString("CVST002_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make DialogPage implementations visible to COM.
        /// </summary>
        internal static string CVST002_Title {
            get {
                return ResourceManager.GetString("CVST002_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register correct type in ProvideOptionPageAttribute.
        /// </summary>
        internal static string CVST003_Title {
            get {
                return ResourceManager.GetString("CVST003_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register correct type in ProvideProfileAttribute.
        /// </summary>
        internal static string CVST004_Title {
            get {
                return ResourceManager.GetString("CVST004_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialize the commands.
        /// </summary>
        internal static string CVST005_CodeFix {
            get {
                return ResourceManager.GetString("CVST005_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands should be initialized when the package is initialized.
        /// </summary>
        internal static string CVST005_Description {
            get {
                return ResourceManager.GetString("CVST005_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &apos;{0}&apos; has not been initialized.
        /// </summary>
        internal static string CVST005_MessageFormat {
            get {
                return ResourceManager.GetString("CVST005_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register commands.
        /// </summary>
        internal static string CVST005_Title {
            get {
                return ResourceManager.GetString("CVST005_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add [Guid(...)].
        /// </summary>
        internal static string CVST006_CodeFix {
            get {
                return ResourceManager.GetString("CVST006_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color providers should have an explicit GUID.
        /// </summary>
        internal static string CVST006_Description {
            get {
                return ResourceManager.GetString("CVST006_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color providers should have an explicit GUID.
        /// </summary>
        internal static string CVST006_MessageFormat {
            get {
                return ResourceManager.GetString("CVST006_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define explicit GUIDs for font and color providers.
        /// </summary>
        internal static string CVST006_Title {
            get {
                return ResourceManager.GetString("CVST006_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add [Guid(...)].
        /// </summary>
        internal static string CVST007_CodeFix {
            get {
                return ResourceManager.GetString("CVST007_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color categories should have an explicit GUID.
        /// </summary>
        internal static string CVST007_Description {
            get {
                return ResourceManager.GetString("CVST007_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color categories should have an explicit GUID.
        /// </summary>
        internal static string CVST007_MessageFormat {
            get {
                return ResourceManager.GetString("CVST007_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define explicit GUIDs for font and color categories.
        /// </summary>
        internal static string CVST007_Title {
            get {
                return ResourceManager.GetString("CVST007_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create font and color provider.
        /// </summary>
        internal static string CVST008_CodeFix {
            get {
                return ResourceManager.GetString("CVST008_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color categories should have a provider.
        /// </summary>
        internal static string CVST008_Description {
            get {
                return ResourceManager.GetString("CVST008_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This font and color category does not have a provider. Create a provider by inheriting from BaseFontAndColorProvider&lt;T&gt;.
        /// </summary>
        internal static string CVST008_MessageFormat {
            get {
                return ResourceManager.GetString("CVST008_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define a provider for font and color categories.
        /// </summary>
        internal static string CVST008_Title {
            get {
                return ResourceManager.GetString("CVST008_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color providers should be declared on the package.
        /// </summary>
        internal static string CVST009_Description {
            get {
                return ResourceManager.GetString("CVST009_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package should declare the font and color provider using the [ProvideFontsAndColors({0})] attribute.
        /// </summary>
        internal static string CVST009_MessageFormat {
            get {
                return ResourceManager.GetString("CVST009_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declare font and color providers using a [ProvideFontsAndColors(...)] attribute.
        /// </summary>
        internal static string CVST009_Title {
            get {
                return ResourceManager.GetString("CVST009_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register font and color providers.
        /// </summary>
        internal static string CVST010_CodeFix {
            get {
                return ResourceManager.GetString("CVST010_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font and color providers that are declared on a package should be registered during initialization.
        /// </summary>
        internal static string CVST010_Description {
            get {
                return ResourceManager.GetString("CVST010_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font and color providers have not been registered.
        /// </summary>
        internal static string CVST010_MessageFormat {
            get {
                return ResourceManager.GetString("CVST010_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register font and color providers during initialization.
        /// </summary>
        internal static string CVST010_Title {
            get {
                return ResourceManager.GetString("CVST010_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change to &apos;{0}&apos;.
        /// </summary>
        internal static string IncorrectProvidedType_CodeFix {
            get {
                return ResourceManager.GetString("IncorrectProvidedType_CodeFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; is not assignable to &apos;{1}&apos;.
        /// </summary>
        internal static string IncorrectProvidedType_MessageFormat {
            get {
                return ResourceManager.GetString("IncorrectProvidedType_MessageFormat", resourceCulture);
            }
        }
    }
}
